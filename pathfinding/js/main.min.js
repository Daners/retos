var $jscomp={scope:{},checkStringArgs:function(b,a,c){if(null==b)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(a instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return b+""}};
$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,a,c){if(c.get||c.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[a]=c.value)};$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(b,a,c,d){if(a){c=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var e=b[d];e in c||(c[e]={});c=c[e]}b=b[b.length-1];d=c[b];a=a(d);a!=d&&null!=a&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:a})}};$jscomp.polyfill("String.prototype.includes",function(b){return b?b:function(a,b){return-1!==$jscomp.checkStringArgs(this,a,"includes").indexOf(a,b||0)}},"es6-impl","es3");
function removeFromArray(b,a){for(var c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1)}function heuristic(b,a){return abs(b.i-a.i)+abs(b.j-a.j)}var cols=50,rows=50,grid=Array(cols),openSet=[],closedSet=[],start,end,w,h,path=[];
function Spot(b,a){this.i=b;this.j=a;this.h=this.g=this.f=0;this.neighboors=[];this.previous=void 0;this.wall=!1;.3>random(1)&&(this.wall=!0);this.show=function(a){fill(a);this.wall&&(fill(0),noStroke(),ellipse(this.i*w+w/2,this.j*h+h/2,w/2,h/2))};this.addNeighboors=function(a){this.i<cols-1&&this.neighboors.push(a[this.i+1][this.j]);0<this.i&&this.neighboors.push(a[this.i-1][this.j]);this.j<rows-1&&this.neighboors.push(a[this.i][this.j+1]);0<this.j&&this.neighboors.push(a[this.i][this.j-1]);0<this.i&&
0<this.j&&this.neighboors.push(a[this.i-1][this.j-1]);this.i<cols-1&&0<this.j&&this.neighboors.push(a[this.i+1][this.j-1]);0<this.i&&this.j<rows-1&&this.neighboors.push(a[this.i-1][this.j+1]);this.i<cols-1&&this.j<rows-1&&this.neighboors.push(a[this.i+1][this.j+1])}}
function setup(){createCanvas(400,400);console.log("A*");w=width/cols;h=height/rows;for(var b=0;b<cols;b++)grid[b]=Array(rows);for(b=0;b<cols;b++)for(var a=0;a<rows;a++)grid[b][a]=new Spot(b,a);for(b=0;b<cols;b++)for(a=0;a<rows;a++)grid[b][a].addNeighboors(grid);start=grid[0][0];end=grid[cols-1][rows-1];start.wall=!1;end.wall=!1;openSet.push(start)}
function draw(){if(0<openSet.length){for(var b=0,a=0;a<openSet.length;a++)openSet[a].f<openSet[b].f&&(b=a);b=openSet[b];b===end&&(noLoop(),console.log("Done!"));removeFromArray(openSet,b);closedSet.push(b);for(var c=b.neighboors,a=0;a<c.length;a++){var d=c[a];if(!closedSet.includes(d)&&!d.wall){var e=b.g+1,f=!1;openSet.includes(d)?e<d.g&&(d.g=e,f=!0):(d.g=e,f=!0,openSet.push(d));f&&(d.h=heuristic(d,end),d.f=d.g+d.h,d.previous=b)}}background(255);for(a=0;a<cols;a++)for(c=0;c<rows;c++)grid[a][c].show(color(255));
for(a=0;a<closedSet.length;a++)closedSet[a].show(color(255,0,0));for(a=0;a<openSet.length;a++)openSet[a].show(color(0,255,0));path=[];a=b;for(path.push(a);a.previous;)path.push(a.previous),a=a.previous;for(a=0;a<path.length;a++);noFill();stroke(255,0,200);strokeWeight(w/2);beginShape();for(a=0;a<path.length;a++)vertex(path[a].i*w+w/2,path[a].j*h+h/2);endShape()}else nosolution=!0,noLoop()};
